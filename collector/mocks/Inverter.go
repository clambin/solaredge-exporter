// Code generated by mockery v2.21.1. DO NOT EDIT.

package mocks

import (
	context "context"

	solaredge "github.com/clambin/solaredge"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// Inverter is an autogenerated mock type for the Inverter type
type Inverter struct {
	mock.Mock
}

// GetTelemetry provides a mock function with given fields: ctx, start, end
func (_m *Inverter) GetTelemetry(ctx context.Context, start time.Time, end time.Time) ([]solaredge.InverterTelemetry, error) {
	ret := _m.Called(ctx, start, end)

	var r0 []solaredge.InverterTelemetry
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, time.Time, time.Time) ([]solaredge.InverterTelemetry, error)); ok {
		return rf(ctx, start, end)
	}
	if rf, ok := ret.Get(0).(func(context.Context, time.Time, time.Time) []solaredge.InverterTelemetry); ok {
		r0 = rf(ctx, start, end)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]solaredge.InverterTelemetry)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, time.Time, time.Time) error); ok {
		r1 = rf(ctx, start, end)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewInverter interface {
	mock.TestingT
	Cleanup(func())
}

// NewInverter creates a new instance of Inverter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewInverter(t mockConstructorTestingTNewInverter) *Inverter {
	mock := &Inverter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
